services:
  db-chatapp:
    image: postgres:13
    container_name: db-chatapp
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: chatapp
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - networkChatApp
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate-chatapp:
    image: node:22
    container_name: migrate-chatapp
    working_dir: /app
    volumes:
      - ./Services:/app
    command: sh -c "npm install && npx prisma migrate deploy && npx prisma db push"
    depends_on:
      db-chatapp:
        condition: service_healthy
    env_file:
      - ./Services/.env
    networks:
      - networkChatApp
    restart: "on-failure"

  gateway-chatapp:
    image: node:22
    container_name: gateway-chatapp
    working_dir: /app
    volumes:
      - ./Services:/app
    ports:
      - "4000:4000"
    command: sh -c "npm run start:dev"
    depends_on:
      migrate-chatapp:
        condition: service_completed_successfully
      user-chatapp:
        condition: service_healthy
      auth-chatapp:
        condition: service_healthy
      password-chatapp:
        condition: service_healthy
    env_file:
      - ./Services/.env
    networks:
      - networkChatApp
    restart: "always"

  user-chatapp:
    image: node:22
    container_name: service-user-chatapp
    working_dir: /app
    volumes:
      - ./Services:/app
    ports:
      - "4001:4001"
    command: sh -c "npm run start:dev user"
    depends_on:
      db-chatapp:
        condition: service_healthy
      migrate-chatapp:
        condition: service_completed_successfully
    env_file:
      - ./Services/.env
    networks:
      - networkChatApp
    healthcheck:
      test: ["CMD-SHELL", "curl -f -XPOST -H 'Content-Type: application/json' -d '{\"query\": \"{ healthCheck }\"}' http://user-chatapp:4001/graphql || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 10
    restart: "on-failure"

  auth-chatapp:
    image: node:22
    container_name: service-auth-chatapp
    working_dir: /app
    volumes:
      - ./Services:/app
    ports:
      - "4002:4002"
    command: sh -c "npm run start:dev auth"
    depends_on:
      db-chatapp:
        condition: service_healthy
      migrate-chatapp:
        condition: service_completed_successfully
    env_file:
      - ./Services/.env
    networks:
      - networkChatApp
    healthcheck:
      test: ["CMD-SHELL", "curl -f -XPOST -H 'Content-Type: application/json' -d '{\"query\": \"{ healthCheck }\"}' http://auth-chatapp:4002/graphql || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 10
    restart: "on-failure"

  password-chatapp:
    image: node:22
    container_name: service-password-chatapp
    working_dir: /app
    volumes:
      - ./Services:/app
    ports:
      - "4003:4003"
    command: sh -c "npm run start:dev password"
    depends_on:
      db-chatapp:
        condition: service_healthy
      migrate-chatapp:
        condition: service_completed_successfully
    env_file:
      - ./Services/.env
    networks:
      - networkChatApp
    healthcheck:
      test: ["CMD-SHELL", "curl -f -XPOST -H 'Content-Type: application/json' -d '{\"query\": \"{ healthCheck }\"}' http://password-chatapp:4003/graphql || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 10
    restart: "on-failure"

volumes:
  db_data:

networks:
  networkChatApp:
    driver: bridge